{"version":3,"file":"tooltip.js","sources":["../src/Tooltip.vue","../src/TooltipPlugin.ts"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { Instance, Offsets, OptionsGeneric, createPopper } from '@popperjs/core';\nimport { computed, nextTick, onBeforeUnmount, onMounted, ref } from 'vue';\n\nconst props = defineProps<{\n    offset?: Offsets,\n    popper?: OptionsGeneric<unknown>,\n    placement?: string,\n    target: Element,\n    title?: string,\n    show?: boolean,\n    top?: boolean,\n    bottom?: boolean,\n    left?: boolean,\n    right?: boolean\n}>();\n\nconst el = ref<HTMLElement>();\nconst arrow = ref<HTMLElement>();\nconst currentShow = ref(false);\nconst popperInstance = ref<Instance>();\n\nconst computedPlacement = computed(() => {\n    if(props.placement) {\n        return props.placement;\n    }\n\n    if(props.bottom) {\n        return 'bottom';\n    }\n\n    if(props.left) {\n        return 'left';\n    }\n\n    if(props.right) {\n        return 'right';\n    }\n\n    return 'top';\n});\n\nconst tooltipClasses = computed(() => {\n    return {\n        show: currentShow,\n        [`bs-tooltip-${computedPlacement.value}`]: true\n    };\n});\n\nfunction open() {\n    currentShow.value = true;\n}\n\nfunction close() {\n    currentShow.value = false;\n}\n\ndefineExpose({\n    open, close\n});\n\nonMounted(() => {\n    if(!el.value) {\n        return;\n    }\n\n    popperInstance.value = createPopper(props.target, el.value, Object.assign({\n        placement: computedPlacement.value,\n        modifiers: [\n            {\n                name: 'offset',\n                options: {\n                    offset: [props.offset?.x ?? 0, props.offset?.y ?? 6]\n                },\n            },\n            {\n                name: 'arrow',\n                options: {\n                    element: arrow.value,\n                },\n            },\n        ],\n    }, props.popper));\n\n    nextTick(() => {\n        currentShow.value = props.show;\n    });\n});\n\nonBeforeUnmount(()=> {\n    popperInstance.value && popperInstance.value.destroy();\n});\n</script>\n\n<template>\n    <div\n        ref=\"el\"\n        class=\"tooltip\"\n        :class=\"tooltipClasses\"\n        role=\"tooltip\">\n        <div\n            ref=\"arrow\"\n            class=\"tooltip-arrow\" />\n        <div\n            ref=\"inner\"\n            class=\"tooltip-inner\">\n            <slot>{{ title }}</slot>\n        </div>\n    </div>\n</template>\n\n<style>\n.tooltip:not(.show) {\n    z-index: -1;\n}\n</style>","import type { App } from 'vue';\nimport { h, render } from 'vue';\nimport Tooltip from './Tooltip.vue';\n\ntype TooltipPluginOptions = {\n    delay?: number,\n    prefix: string,\n    progressiveEnhancement: boolean,\n    triggers: {\n        open: string[],\n        close: string[],\n    }\n}\n\nexport default function (app: App, opts: Partial<TooltipPluginOptions> = {}) {\n    const tooltips: Map<string,Function> = new Map;\n\n    const options: TooltipPluginOptions = Object.assign({\n        delay: undefined,\n        prefix: 'data-tooltip',\n        progressiveEnhancement: true,\n        triggers: {\n            open: ['mouseover:350'],\n            close: ['mouseout:100'],\n        }\n    }, opts);\n    \n    const prefix = options.prefix.replace(/[-]+$/, '');\n    const prefixRegExp = new RegExp(`^${prefix}\\-`);\n\n    function getAttributes(el: Element): Record<string,string> {\n        return Array.from(el.attributes)\n            .map(a => [a.name, a.value])\n            .filter(([key]) => key === 'title' || key.match(prefixRegExp))\n            .map(([key, value]) => [key.replace(new RegExp(prefixRegExp), ''), value])\n            .reduce((carry, attr) => Object.assign(carry, { [attr[0]]: attr[1] }), {});\n    }\n\n    function createTooltip(target: Element, props: Record<string,string> = {}, hash: string): Function {\n        const container = document.createElement('template');\n        \n        const vnode = h(Tooltip, Object.assign({\n            target,\n            show: true\n        }, props));\n    \n        render(vnode, container);\n    \n        const [el] = [...container.children];\n    \n        document.body.append(el);\n    \n        return () => {\n            tooltips.delete(hash);\n\n            // @ts-ignore\n            vnode.component?.ctx.close();\n    \n            // @todo: Make the animation rate (150) dynamic. Should get value \n            // from the CSS transition duration.\n            setTimeout(() => el.remove(), 150);\n        };\n    }\n\n    function destroyTooltip(target: Element) {\n        const id = target.getAttribute(`${prefix}-id`);\n        if(id) {\n            const tooltip = tooltips.get(id);\n            tooltip?.();\n        }\n    }\n\n    function init(target: Element, props = {}) {\n        const properties: Record<string,string> = Object.assign({\n            title: target.getAttribute(prefix) || target.getAttribute('title')\n        }, props, getAttributes(target));\n\n        // If the properties don't have a title, ignore this target.\n        if(!properties.title || target.hasAttribute(`${prefix}-id`)) {\n            return;\n        }\n\n        // Create a unique \"hash\" to show the node has been initialized.\n        // This prevents double initializing on the same element.\n        const hash = Math.random().toString(36).slice(2, 7);\n        \n        // Create the instance vars.\n        let tooltip: Function|null, timer: number;\n\n        //target.setAttribute(prefix, properties.title);\n        target.setAttribute(`${prefix}-id`, hash);\n        target.removeAttribute('title');\n\n        function open(delay = 0) {\n            clearTimeout(timer);\n\n            if(!tooltip) {\n                timer = setTimeout(() => {\n                    // Do a check before creating the tooltip to ensure the dom\n                    // element still exists. Its possible for the element to\n                    // be removed after the timeout delay runs.\n                    if(document.contains(target)) {\n                        tooltip = createTooltip(target, properties, hash);\n                        tooltips.set(hash, tooltip);\n                    }\n                }, delay);\n            }\n        }\n\n        function close(delay = 0) {\n            clearTimeout(timer);\n\n            if(tooltip) {\n                timer = setTimeout(() => {\n                    tooltip && tooltip();\n                    tooltip = null;\n                }, delay);\n            }\n        }\n\n        function addEventListener(trigger: string, fn: Function) {\n            const [ event, delayString ] = trigger.split(':');\n\n            target.addEventListener(event, () => fn(Number(delayString || 0)));\n        }\n\n        (target.getAttribute(`${prefix}-trigger-open`)?.split(',') || options.triggers.open)\n            .map(trigger => addEventListener(trigger, open));\n            \n        (target.getAttribute(`${prefix}-trigger-close`)?.split(',') || options.triggers.close)\n            .map(trigger => addEventListener(trigger, close));\n    }\n  \n    app.mixin({\n        mounted() {\n            if(!options.progressiveEnhancement) {\n                return;\n            }\n            \n            let el = this.$el;\n\n            if(this.$el instanceof Text) {\n                el = this.$el.parentNode;\n            }\n\n            if(el instanceof HTMLElement) {\n                init(el);\n            }\n\n            // Create the tree walker.\n            const walker = document.createTreeWalker(\n                el,\n                NodeFilter.SHOW_ALL,\n                (node: Node) => {\n                    if(!(node instanceof Element)) {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n                    \n                    return NodeFilter.FILTER_ACCEPT;\n                }\n            );\n\n            // Step through and alert all child nodes\n            while(walker.nextNode()) {\n                if(walker.currentNode instanceof Element) {\n                    init(<Element> walker.currentNode);\n                }\n            }\n\n            const observer = new MutationObserver((changes) => {\n\n                let tooltipFound = false;\n                for(const { removedNodes } of changes) {\n                    for(const node of removedNodes) {\n                        if(!(node instanceof Element)) {\n                            continue;\n                        }\n                        for(const el of node.querySelectorAll(`[${prefix}-id]`)) {\n                            const tooltip = tooltips.get(\n                                el.getAttribute(`${prefix}-id`) as string\n                            );\n                            if(tooltip) {\n                                tooltipFound = true;\n                                tooltip();\n                            }\n                        }\n                    } \n                }\n\n                // @experimental\n                // In some cases in Inertia.js, not all tooltips are removed on certain actions.\n                // remove all tooltips if no tooltip was found.\n                if(!tooltipFound) {\n                    for(const tooltip of tooltips.values()) {\n                        tooltip();\n                    }\n                }\n            });\n\n            observer.observe(el, { childList: true });\n        },\n    });\n\n    app.directive('tooltip', {\n        beforeMount(target, binding) {\n            init(target, Object.assign({}, binding.modifiers, binding.value));\n        },\n        beforeUnmount(target) {\n            destroyTooltip(target);\n        }\n    });\n}"],"names":["el","ref","arrow","currentShow","popperInstance","computedPlacement","computed","props","tooltipClasses","open","close","__expose","onMounted","createPopper","_a","_b","nextTick","onBeforeUnmount","TooltipPlugin","app","opts","tooltips","options","prefix","prefixRegExp","getAttributes","a","key","value","carry","attr","createTooltip","target","hash","container","vnode","h","Tooltip","render","destroyTooltip","id","tooltip","init","properties","timer","delay","addEventListener","trigger","fn","event","delayString","walker","node","changes","tooltipFound","removedNodes","binding"],"mappings":"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"}
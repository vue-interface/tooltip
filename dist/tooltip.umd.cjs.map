{"version":3,"file":"tooltip.umd.cjs","sources":["../src/Popper.ts","../src/Tooltip.vue","../src/TooltipPlugin.ts"],"sourcesContent":["import { createPopper } from '@popperjs/core';\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n\n    props: {\n        offset: {\n            type: Array,\n            default: undefined\n        },\n\n        popper: {\n            type: Object,\n            default: undefined\n        },\n\n        placement: {\n            type: String,\n            default: undefined\n        },\n\n        target: {\n            type: Element,\n            required: true\n        },\n\n        title: {\n            type: String,\n            default: undefined\n        },\n        \n        show: Boolean,\n        \n        top: Boolean,\n\n        bottom: Boolean,\n\n        left: Boolean,\n\n        right: Boolean,\n    },\n\n    data() {\n        return {\n            currentShow: false,\n            popperInstance: null\n        };\n    },\n\n    computed: {\n        computedPlacement() {\n            if(this.placement) {\n                return this.placement;\n            }\n\n            if(this.bottom) {\n                return 'bottom';\n            }\n\n            if(this.left) {\n                return 'left';\n            }\n\n            if(this.right) {\n                return 'right';\n            }\n\n            return 'top';\n        },\n        tooltipClasses() {\n            return {\n                show: this.currentShow,\n                [`bs-tooltip-${this.computedPlacement}`]: true\n            };\n        }\n    },\n\n    mounted() {\n        this.popperInstance = createPopper(this.target, this.$el, Object.assign({\n            placement: this.computedPlacement,\n            modifiers: [\n                {\n                    name: 'offset',\n                    options: {\n                        offset: [0, 6]\n                    },\n                },\n                {\n                    name: 'arrow',\n                    options: {\n                        element: this.$refs.arrow,\n                    },\n                },\n            ],\n        }, this.popper));\n\n        this.$nextTick(() => {\n            this.currentShow = this.show;\n        });\n    },\n\n    beforeUnmount() {\n        this.popperInstance && this.popperInstance.destroy();\n    },\n\n    methods: {\n\n        open() {\n            this.currentShow = true;\n        },\n\n        close() {\n            this.currentShow = false;\n        }\n\n    }\n\n});","<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport Popper from './Popper';\n\nexport default defineComponent({\n    mixins: [\n        Popper\n    ]\n});\n</script>\n\n<template>\n    <div\n        class=\"tooltip\"\n        :class=\"tooltipClasses\"\n        role=\"tooltip\">\n        <div\n            ref=\"arrow\"\n            class=\"tooltip-arrow\" />\n        <div\n            ref=\"inner\"\n            class=\"tooltip-inner\">\n            <slot>{{ title }}</slot>\n        </div>\n    </div>\n</template>\n\n<style>\n.tooltip:not(.show) {\n    z-index: -1;\n}\n</style>","import type { App } from 'vue';\nimport { h, render } from 'vue';\nimport Tooltip from './Tooltip.vue';\n\ntype TooltipPluginOptions = {\n    delay?: number,\n    prefix: string,\n    progressiveEnhancement: boolean,\n    triggers: {\n        open: string[],\n        close: string[],\n    }\n}\n\nexport default function (app: App, opts: Partial<TooltipPluginOptions> = {}) {\n    const tooltips: Map<string,Function> = new Map;\n\n    const options: TooltipPluginOptions = Object.assign({\n        delay: undefined,\n        prefix: 'data-tooltip',\n        progressiveEnhancement: true,\n        triggers: {\n            open: ['mouseover:350'],\n            close: ['mouseout:100'],\n        }\n    }, opts);\n    \n    const prefix = options.prefix.replace(/[-]+$/, '');\n    const prefixRegExp = new RegExp(`^${prefix}\\-`);\n\n    function getAttributes(el: Element): Record<string,any> {\n        return Array.from(el.attributes)\n            .map(a => [a.name, a.value])\n            .filter(([key]) => key === 'title' || key.match(prefixRegExp))\n            .map(([key, value]) => [key.replace(new RegExp(prefixRegExp), ''), value])\n            .reduce((carry, attr) => Object.assign(carry, { [attr[0]]: attr[1] }), {});\n    }\n\n    function createTooltip(target: Element, props: Record<string,any> = {}, hash: string): Function {\n        const container = document.createElement('template');\n        \n        const vnode = h(Tooltip, Object.assign({\n            target,\n            show: true\n        }, props));\n    \n        render(vnode, container);\n    \n        const [el] = [...container.children];\n    \n        document.body.append(el);\n    \n        return () => {\n            tooltips.delete(hash);\n\n            // @ts-ignore\n            vnode.component?.ctx.close();\n    \n            // @todo: Make the animation rate (150) dynamic. Should get value \n            // from the CSS transition duration.\n            setTimeout(() => el.remove(), 150);\n        };\n    }\n\n    function destroyTooltip(target: Element) {\n        const id = target.getAttribute(`${prefix}-id`);\n        if(id) {\n            const tooltip = tooltips.get(id);\n            tooltip?.();\n        }\n    }\n\n    function init(target: Element, props = {}) {\n        const properties: Record<string,any> = Object.assign({\n            title: target.getAttribute(prefix) || target.getAttribute('title')\n        }, props, getAttributes(target));\n\n        // If the properties don't have a title, ignore this target.\n        if(!properties.title || target.hasAttribute(`${prefix}-id`)) {\n            return;\n        }\n\n        // Create a unique \"hash\" to show the node has been initialized.\n        // This prevents double initializing on the same element.\n        const hash = Math.random().toString(36).slice(2, 7);\n        \n        // Create the instance vars.\n        let tooltip: Function|null, timer: number;\n\n        //target.setAttribute(prefix, properties.title);\n        target.setAttribute(`${prefix}-id`, hash);\n        target.removeAttribute('title');\n\n        function open(delay = 0) {\n            clearTimeout(timer);\n\n            if(!tooltip) {\n                timer = setTimeout(() => {\n                    // Do a check before creating the tooltip to ensure the dom\n                    // element still exists. Its possible for the element to\n                    // be removed after the timeout delay runs.\n                    if(document.contains(target)) {\n                        tooltip = createTooltip(target, properties, hash);\n                        tooltips.set(hash, tooltip);\n                    }\n                }, delay);\n            }\n        }\n\n        function close(delay = 0) {\n            clearTimeout(timer);\n\n            if(tooltip) {\n                timer = setTimeout(() => {\n                    tooltip && tooltip();\n                    tooltip = null;\n                }, delay);\n            }\n        }\n\n        function addEventListener(trigger: string, fn: Function) {\n            const [ event, delayString ] = trigger.split(':');\n\n            target.addEventListener(event, () => fn(Number(delayString || 0)));\n        }\n\n        (target.getAttribute(`${prefix}-trigger-open`)?.split(',') || options.triggers.open)\n            .map(trigger => addEventListener(trigger, open));\n            \n        (target.getAttribute(`${prefix}-trigger-close`)?.split(',') || options.triggers.close)\n            .map(trigger => addEventListener(trigger, close));\n    }\n  \n    app.mixin({\n        mounted() {\n            if(!options.progressiveEnhancement) {\n                return;\n            }\n            \n            let el = this.$el;\n\n            if(this.$el instanceof Text) {\n                el = this.$el.parentNode;\n            }\n\n            if(el instanceof HTMLElement) {\n                init(el);\n            }\n\n            // Create the tree walker.\n            const walker = document.createTreeWalker(\n                el,\n                NodeFilter.SHOW_ALL,\n                (node: Node) => {\n                    if(!(node instanceof Element)) {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n                    \n                    return NodeFilter.FILTER_ACCEPT;\n                }\n            );\n\n            // Step through and alert all child nodes\n            while(walker.nextNode()) {\n                if(walker.currentNode instanceof Element) {\n                    init(<Element> walker.currentNode);\n                }\n            }\n\n            const observer = new MutationObserver((changes) => {\n\n                let tooltipFound = false;\n                for(const { removedNodes } of changes) {\n                    for(const node of removedNodes) {\n                        if(!(node instanceof Element)) {\n                            continue;\n                        }\n                        for(const el of node.querySelectorAll(`[${prefix}-id]`)) {\n                            const tooltip = tooltips.get(\n                                el.getAttribute(`${prefix}-id`) as string\n                            );\n                            if(tooltip) {\n                                tooltipFound = true;\n                                tooltip();\n                            }\n                        }\n                    } \n                }\n\n                // @experimental\n                // In some cases in Inertia.js, not all tooltips are removed on certain actions.\n                // remove all tooltips if no tooltip was found.\n                if(!tooltipFound) {\n                    for(const tooltip of tooltips.values()) {\n                        tooltip();\n                    }\n                }\n            });\n\n            observer.observe(el, { childList: true });\n        },\n    });\n\n    app.directive('tooltip', {\n        beforeMount(target, binding) {\n            init(target, Object.assign({}, binding.modifiers, binding.value));\n        },\n        beforeUnmount(target) {\n            destroyTooltip(target);\n        }\n    });\n}"],"names":["Popper","defineComponent","createPopper","_sfc_main","_hoisted_1","_hoisted_2","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","_normalizeClass","_createElementVNode","_renderSlot","TooltipPlugin","app","opts","tooltips","options","prefix","prefixRegExp","getAttributes","el","a","key","value","carry","attr","createTooltip","target","props","hash","container","vnode","h","Tooltip","render","_a","destroyTooltip","id","tooltip","init","properties","timer","open","delay","close","addEventListener","trigger","fn","event","delayString","_b","walker","node","changes","tooltipFound","removedNodes","binding"],"mappings":"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"}